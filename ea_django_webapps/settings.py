"""
Django settings for ea_django_webapps project.

Generated by 'django-admin startproject' using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import re

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

SECRET_KEY = os.getenv('DJANGO_SECRET')

DEBUG = bool(os.getenv('DJANGO_DEBUG'))

ALLOWED_HOSTS = ['*']


INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'authenticate_ea',
    'zar'  # zoom attendance reporter
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'authenticate_ea.middleware.EaAuthMiddleware',
]

ROOT_URLCONF = 'ea_django_webapps.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'ea_django_webapps', 'templates')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ea_django_webapps.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('MYSQL_DATABASE'),
        'USER': os.getenv('MYSQL_USER'),
        'PASSWORD': os.getenv('MYSQL_PASSWORD'),
        'HOST': 'db',
        'PORT': 3306,
        'OPTIONS': {
            'charset': 'utf8mb4',
            'init_command': (
                'SET sql_mode="STRICT_TRANS_TABLES,NO_ZERO_DATE,'
                'NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO"'
            )
        },
        'TEST': {
            'CHARSET': 'utf8mb4',
            'COLLATION': 'utf8mb4_unicode_ci',
        }
    },
    'db.sqlite': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_FROM = 'jdevries3133@gmail.com'  # temp

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
]

# Limit resources to EMPACAD staff. Protect all routes not whitelisted.
EA_AUTHENTICATION = {
    'domain_name': 'localhost:8000',
    'filter_mode': 'whitelist',
    'filter_routes': [
        re.compile(i) for i in [
            '^/$',
            '^/zoom-attendance/faq/$',
            '^/register',
            '^/accounts',
            '^/admin',
        ]
    ]
}

LOGIN_REDIRECT_URL = '/zoom-attendance/'

AUTH_USER_MODEL = 'authenticate_ea.User'




LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True




STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

MEDIA_URL = '/media/'


FORMATTERS = {
    'debug': '%(pathname)s:%(funcName)s:%(lineno)s:\n:%(message)s',
    'prod': '%(levelname)s %(asctime)s %(name)s.%(funcName)s:%(lineno)s- %(message)s'
}

formatter = FORMATTERS['debug'] if DEBUG else FORMATTERS['prod']

LOGGING = {
    'version': 1,
    'formatters': {
        'debug': {
            'format': '%(pathname)s:%(funcName)s:%(lineno)s\n->\t%(message)s\n',
        },
        'production': {
            'format': '%(levelname)s %(asctime)s %(name)s.%(funcName)s:%(lineno)s- %(message)s'
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'level': 'DEBUG',
            'formatter': 'debug'
        },
    },
    'loggers': {
        'root': {
            'handlers': ['console'],
            'level': 'ERROR',
        },
        'teacherHelper.zoom_attendance_report': {
            'handlers': ['console'],
            'level': 'INFO'
        },
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
        'zar': {
            'handlers': ['console'],
            'level': 'DEBUG',
        },
        '__main__': {  # ends up being relevant for debugging zar.tasks
            'handlers': ['console'],
            'level': 'DEBUG'
        },
    },
}
